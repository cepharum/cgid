**
 * OS-specific operations
 *
 * @author Thomas Urban <thomas.urban@cepharum.de>
 * @package cgid
 * @license GPLv3
 */

var CHILD = require( "child_process" );

var CONFIG = require( "config" );

// ----------------------------------------------------------------------------

module.exports.normalizeRunAsUser = function( fncCallback )
{
	var runAsUser = CONFIG.runAsUser;

	if ( !runAsUser )
	{
		// there is no configured user to run CGI scripts as
		// -> use executed script's individual owner
		fncCallback( false );
	}
	else if ( runAsUser >= 0 )
	{
		// it's positive integer ... no need to convert
		fncCallback( parseInt( runAsUser ) );
	}
	else
	{
		// it's a user's name to be converted to user's ID, first

		if ( !/bsd|linux/i.test( require( "os" ).type() ) )
		{
			console.error( "Provide user in runAsUser by its ID rather by its name!");
			process.exit( 1 );
		}


		/*
		 * invoke system command "id -u <username>" and capture its output
		 */

		var capture = new Buffer( 0 );

		var host = CHILD.spawn( "id", [ "-u", CONFIG.runAsUser ] );

		host.stdout.on( "data", function( chunk )
		{
			capture = Buffer.concat( [ capture, chunk ] );
		} );

		host.on( "close", function( code )
		{
			if ( code == 0 )
			{
				capture = capture.toString();
				if ( capture > 0 )
				{
					return fncCallback( parseInt( capture ) );
				}
			}

			console.error( "failed to get information on/ID of configured runAsUser" );
			process.exit( 1 );
		} );
	}
};
